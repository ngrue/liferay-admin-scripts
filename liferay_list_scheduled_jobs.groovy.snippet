/*
* Copyright (c) 2018 Nicolas GRUE, All rights reserved.
*
* This library is free software; you can redistribute it and/or modify it under
* the terms of the GNU Lesser General Public License as published by the Free
* Software Foundation; either version 2.1 of the License, or (at your option)
* any later version.
*
* This library is distributed in the hope that it will be useful, but WITHOUT
* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
* FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
* details.
*/

import com.liferay.portal.kernel.log.*;
import com.liferay.portal.kernel.scheduler.*;
import com.liferay.portal.kernel.util.DateUtil;
import java.util.Date;

logger = LogFactoryUtil.getLog('com.liferay.scheduler.joblist')
def log = { m -> logger.info(m); println m }

jobs = SchedulerEngineHelperUtil.getScheduledJobs()

log 'storage; state; trigger.type; config expression; trigger.start; trigger.end; job name'

jobs.sort{it.trigger.startDate};
jobs = jobs.reverse();

jobs.each { job ->
    dateDeb = job.trigger.startDate;
    dateFin = job.trigger.endDate;
    formatter = DateUtil.getISO8601Format();
	triggerType = job.trigger.wrappedTrigger.class.simpleName.replace('TriggerImpl','');
	triggerTypeIsCron = triggerType.startsWith('Cron');
	triggerTypeIsCalInterval = triggerType.startsWith('CalendarInterval');
    log ''+job.getStorageType()+
            '; '+SchedulerEngineHelperUtil.getJobState(job)+
            '; '+ triggerType +
            '; '+(triggerTypeIsCron? job.trigger.wrappedTrigger.cronExpression : 
			(triggerTypeIsCalInterval? job.trigger.wrappedTrigger.repeatInterval + ' ' + 
				job.trigger.wrappedTrigger.repeatIntervalUnit : '') )+
            '; '+( dateDeb? formatter.format(dateDeb) : '' )+
            '; '+( dateFin? formatter.format(dateFin) : '' )+
            '; '+job.getJobName() ;
}
